{"failedCount":1,"prefixedPath":"src\/test\/java\/geonames\/get\/geographical_data-get.feature","packageQualifiedName":"src.test.java.geonames.get.geographical_data-get","loopIndex":-1,"relativePath":"src\/test\/java\/geonames\/get\/geographical_data-get.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":2912100,"millis":2.9121,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":1444800,"millis":1.4448,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":23434200,"millis":23.4342,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":6009000,"millis":6.009,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1634600,"millis":1.6346,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1005801,"millis":1.005801,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":610196200,"millis":610.1962,"status":"passed"},"step":{"line":25,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:50.756 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-72&formatted=true&lat=4&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:51.157 response time in milliseconds: 399\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:50 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Transfer-Encoding: chunked\n1 < Content-Type: application\/json;charset=UTF-8\n{\n  \"sunrise\": \"2024-02-06 06:03\",\n  \"lng\": -72,\n  \"countryCode\": \"CO\",\n  \"gmtOffset\": -5,\n  \"rawOffset\": -5,\n  \"sunset\": \"2024-02-06 18:01\",\n  \"timezoneId\": \"America\/Bogota\",\n  \"dstOffset\": -5,\n  \"countryName\": \"Colombia\",\n  \"time\": \"2024-02-05 22:54\",\n  \"lat\": 4\n}\n\n"},{"result":{"nanos":17801,"millis":0.017801,"status":"passed"},"step":{"line":26,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":9434300,"errorMessage":"match failed: EQUALS\n  $ | not equal | match failed for name: 'sunset' (MAP:MAP)\n  {\"sunrise\":\"2024-02-06 06:03\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:01\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"2024-02-05 22:54\",\"lat\":4}\n  {\"sunrise\":\"#string\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:09\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"#string\",\"lat\":4}\n\n    $.sunset | not equal (STRING:STRING)\n    '2024-02-06 18:01'\n    '2024-02-06 18:09'\n\nsrc\/test\/java\/geonames\/get\/geographical_data-get.feature:27","millis":9.4343,"status":"failed"},"step":{"line":27,"prefix":"And","index":2,"text":"match $ == responseDataColombia"},"stepLog":"22:54:51.169 src\/test\/java\/geonames\/get\/geographical_data-get.feature:27\nAnd match $ == responseDataColombia\nmatch failed: EQUALS\n  $ | not equal | match failed for name: 'sunset' (MAP:MAP)\n  {\"sunrise\":\"2024-02-06 06:03\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:01\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"2024-02-05 22:54\",\"lat\":4}\n  {\"sunrise\":\"#string\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:09\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"#string\",\"lat\":4}\n\n    $.sunset | not equal (STRING:STRING)\n    '2024-02-06 18:01'\n    '2024-02-06 18:09'\n\nsrc\/test\/java\/geonames\/get\/geographical_data-get.feature:27\n"}],"line":30,"description":"","durationMillis":656.088802,"failed":true,"error":"match failed: EQUALS\n  $ | not equal | match failed for name: 'sunset' (MAP:MAP)\n  {\"sunrise\":\"2024-02-06 06:03\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:01\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"2024-02-05 22:54\",\"lat\":4}\n  {\"sunrise\":\"#string\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:09\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"#string\",\"lat\":4}\n\n    $.sunset | not equal (STRING:STRING)\n    '2024-02-06 18:01'\n    '2024-02-06 18:09'\n\nsrc\/test\/java\/geonames\/get\/geographical_data-get.feature:27","executorName":"main","name":"Get geographical data of Colombia","startTime":1707191690333,"refId":"[1.1:30]","endTime":1707191691169,"exampleData":{"latitude":"4","longitude":"-72"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":1056901,"millis":1.056901,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":165000,"millis":0.165,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":508801,"millis":0.508801,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":2153900,"millis":2.1539,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":708699,"millis":0.708699,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":391100,"millis":0.3911,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":357480100,"millis":357.4801,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:51.192 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-72&formatted=true&lat=%C3%B1&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:51.546 response time in milliseconds: 353\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:50 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":15800,"millis":0.0158,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":1233200,"millis":1.2332,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":38,"description":"","durationMillis":363.713501,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191691182,"refId":"[2.1:38]","endTime":1707191691549,"exampleData":{"latitude":"Ã±","longitude":"-72"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":160401,"millis":0.160401,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":190001,"millis":0.190001,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":709199,"millis":0.709199,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1510300,"millis":1.5103,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1057900,"millis":1.0579,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":942101,"millis":0.942101,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":352920301,"millis":352.920301,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:51.567 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=a&formatted=true&lat=8&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:51.917 response time in milliseconds: 349\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:50 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":18701,"millis":0.018701,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":736100,"millis":0.7361,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":39,"description":"","durationMillis":358.245004,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191691558,"refId":"[2.2:39]","endTime":1707191691919,"exampleData":{"latitude":"8","longitude":"a"},"exampleIndex":1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":173299,"millis":0.173299,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":74800,"millis":0.0748,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":800200,"millis":0.8002,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1731001,"millis":1.731001,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":935101,"millis":0.935101,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1329600,"millis":1.3296,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":360603300,"millis":360.6033,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:51.936 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-5&formatted=true&lat=.&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:52.294 response time in milliseconds: 358\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:51 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":9400,"millis":0.0094,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":402099,"millis":0.402099,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":40,"description":"","durationMillis":366.0588,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191691926,"refId":"[2.3:40]","endTime":1707191692295,"exampleData":{"latitude":".","longitude":"-5"},"exampleIndex":2},{"sectionIndex":1,"stepResults":[{"result":{"nanos":182300,"millis":0.1823,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":84699,"millis":0.084699,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":572901,"millis":0.572901,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":789499,"millis":0.789499,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":586499,"millis":0.586499,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":772301,"millis":0.772301,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":443559600,"millis":443.5596,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:52.304 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=ass&formatted=true&lat=%25%24%23&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:52.745 response time in milliseconds: 440\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:51 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":13600,"millis":0.0136,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":686600,"millis":0.6866,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":41,"description":"","durationMillis":447.247999,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191692299,"refId":"[2.4:41]","endTime":1707191692747,"exampleData":{"latitude":"%$#","longitude":"ass"},"exampleIndex":3},{"sectionIndex":1,"stepResults":[{"result":{"nanos":123700,"millis":0.1237,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":636300,"millis":0.6363,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":2372701,"millis":2.372701,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":4933999,"millis":4.933999,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1747800,"millis":1.7478,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1097199,"millis":1.097199,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":412360601,"millis":412.360601,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:52.767 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-a72f&formatted=true&lat=8&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:53.178 response time in milliseconds: 410\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:52 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":19800,"millis":0.0198,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":386101,"millis":0.386101,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":42,"description":"","durationMillis":423.678201,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191692753,"refId":"[2.5:42]","endTime":1707191693179,"exampleData":{"latitude":"8","longitude":"-a72f"},"exampleIndex":4},{"sectionIndex":2,"stepResults":[{"result":{"nanos":175599,"millis":0.175599,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":161100,"millis":0.1611,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":453699,"millis":0.453699,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1120400,"millis":1.1204,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1317200,"millis":1.3172,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":578400,"millis":0.5784,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":384264800,"millis":384.2648,"status":"passed"},"step":{"line":45,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:53.192 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=70&formatted=true&lat=90&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:53.571 response time in milliseconds: 378\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:52 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 87\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"no timezone information found for lat\/lng\",\n  \"value\": 15\n}}\n\n"},{"result":{"nanos":15700,"millis":0.0157,"status":"passed"},"step":{"line":46,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":656700,"millis":0.6567,"status":"passed"},"step":{"line":47,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"no timezone information found for lat\/lng\", \"value\": 15 }}"}}],"line":51,"description":"","durationMillis":388.743598,"failed":false,"executorName":"main","name":"Get geographical data of a country that does not have info","startTime":1707191693185,"refId":"[3.1:51]","endTime":1707191693575,"exampleData":{"latitude":"90","longitude":"70"},"exampleIndex":0},{"sectionIndex":2,"stepResults":[{"result":{"nanos":887400,"millis":0.8874,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":462899,"millis":0.462899,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":877900,"millis":0.8779,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1746900,"millis":1.7469,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1027901,"millis":1.027901,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1372899,"millis":1.372899,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":528901900,"millis":528.9019,"status":"passed"},"step":{"line":45,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:53.592 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=99&formatted=true&lat=90&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:54.119 response time in milliseconds: 524\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:53 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 87\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"no timezone information found for lat\/lng\",\n  \"value\": 15\n}}\n\n"},{"result":{"nanos":10399,"millis":0.010399,"status":"passed"},"step":{"line":46,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":323700,"millis":0.3237,"status":"passed"},"step":{"line":47,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"no timezone information found for lat\/lng\", \"value\": 15 }}"}}],"line":52,"description":"","durationMillis":535.611898,"failed":false,"executorName":"main","name":"Get geographical data of a country that does not have info","startTime":1707191693581,"refId":"[3.2:52]","endTime":1707191694120,"exampleData":{"latitude":"90","longitude":"99"},"exampleIndex":1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":402800,"millis":0.4028,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":87401,"millis":0.087401,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":294400,"millis":0.2944,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1167101,"millis":1.167101,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":836900,"millis":0.8369,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":362100,"millis":0.3621,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":402894601,"millis":402.894601,"status":"passed"},"step":{"line":55,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:54.129 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=901&formatted=true&lat=81&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:54.530 response time in milliseconds: 400\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:53 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 61\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"invalid lat\/lng\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":16700,"millis":0.0167,"status":"passed"},"step":{"line":56,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":306600,"millis":0.3066,"status":"passed"},"step":{"line":57,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"invalid lat\/lng\", \"value\": 14 }}"}}],"line":61,"description":"","durationMillis":406.368603,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid latitude and longitude","startTime":1707191694123,"refId":"[4.1:61]","endTime":1707191694533,"exampleData":{"latitude":"81","longitude":"901"},"exampleIndex":0},{"sectionIndex":3,"stepResults":[{"result":{"nanos":245899,"millis":0.245899,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":279300,"millis":0.2793,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":541400,"millis":0.5414,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1149399,"millis":1.149399,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1831600,"millis":1.8316,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":6689501,"millis":6.689501,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":362675599,"millis":362.675599,"status":"passed"},"step":{"line":55,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:54:54.552 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=801&formatted=true&lat=700&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:54:54.914 response time in milliseconds: 362\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:54:53 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 61\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"invalid lat\/lng\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":8200,"millis":0.0082,"status":"passed"},"step":{"line":56,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":295499,"millis":0.295499,"status":"passed"},"step":{"line":57,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"invalid lat\/lng\", \"value\": 14 }}"}}],"line":62,"description":"","durationMillis":373.716397,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid latitude and longitude","startTime":1707191694536,"refId":"[4.2:62]","endTime":1707191694915,"exampleData":{"latitude":"700","longitude":"801"},"exampleIndex":1}],"callDepth":0,"name":"Get geographical data of a country","description":"","resultDate":"2024-02-05 10:54:54 p.Â m.","durationMillis":4319.472803,"passedCount":9}