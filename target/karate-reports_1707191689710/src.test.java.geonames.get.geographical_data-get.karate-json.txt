{"failedCount":1,"prefixedPath":"src\/test\/java\/geonames\/get\/geographical_data-get.feature","packageQualifiedName":"src.test.java.geonames.get.geographical_data-get","loopIndex":-1,"relativePath":"src\/test\/java\/geonames\/get\/geographical_data-get.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":2979200,"millis":2.9792,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":2810200,"millis":2.8102,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":26784801,"millis":26.784801,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":7177300,"millis":7.1773,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":2079100,"millis":2.0791,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1459501,"millis":1.459501,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":625435700,"millis":625.4357,"status":"passed"},"step":{"line":25,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:42.315 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-72&formatted=true&lat=4&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:42.726 response time in milliseconds: 409\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:41 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Transfer-Encoding: chunked\n1 < Content-Type: application\/json;charset=UTF-8\n{\n  \"sunrise\": \"2024-02-06 06:03\",\n  \"lng\": -72,\n  \"countryCode\": \"CO\",\n  \"gmtOffset\": -5,\n  \"rawOffset\": -5,\n  \"sunset\": \"2024-02-06 18:01\",\n  \"timezoneId\": \"America\/Bogota\",\n  \"dstOffset\": -5,\n  \"countryName\": \"Colombia\",\n  \"time\": \"2024-02-05 22:53\",\n  \"lat\": 4\n}\n\n"},{"result":{"nanos":21001,"millis":0.021001,"status":"passed"},"step":{"line":26,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":8785099,"errorMessage":"match failed: EQUALS\n  $ | not equal | match failed for name: 'lng' (MAP:MAP)\n  {\"sunrise\":\"2024-02-06 06:03\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:01\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"2024-02-05 22:53\",\"lat\":4}\n  {\"sunrise\":\"#string\",\"lng\":-74,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:09\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"#string\",\"lat\":4}\n\n    $.lng | not equal (NUMBER:NUMBER)\n    -72\n    -74\n\nsrc\/test\/java\/geonames\/get\/geographical_data-get.feature:27","millis":8.785099,"status":"failed"},"step":{"line":27,"prefix":"And","index":2,"text":"match $ == responseDataColombia"},"stepLog":"22:53:42.738 src\/test\/java\/geonames\/get\/geographical_data-get.feature:27\nAnd match $ == responseDataColombia\nmatch failed: EQUALS\n  $ | not equal | match failed for name: 'lng' (MAP:MAP)\n  {\"sunrise\":\"2024-02-06 06:03\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:01\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"2024-02-05 22:53\",\"lat\":4}\n  {\"sunrise\":\"#string\",\"lng\":-74,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:09\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"#string\",\"lat\":4}\n\n    $.lng | not equal (NUMBER:NUMBER)\n    -72\n    -74\n\nsrc\/test\/java\/geonames\/get\/geographical_data-get.feature:27\n"}],"line":30,"description":"","durationMillis":677.531902,"failed":true,"error":"match failed: EQUALS\n  $ | not equal | match failed for name: 'lng' (MAP:MAP)\n  {\"sunrise\":\"2024-02-06 06:03\",\"lng\":-72,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:01\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"2024-02-05 22:53\",\"lat\":4}\n  {\"sunrise\":\"#string\",\"lng\":-74,\"countryCode\":\"CO\",\"gmtOffset\":-5,\"rawOffset\":-5,\"sunset\":\"2024-02-06 18:09\",\"timezoneId\":\"America\/Bogota\",\"dstOffset\":-5,\"countryName\":\"Colombia\",\"time\":\"#string\",\"lat\":4}\n\n    $.lng | not equal (NUMBER:NUMBER)\n    -72\n    -74\n\nsrc\/test\/java\/geonames\/get\/geographical_data-get.feature:27","executorName":"main","name":"Get geographical data of Colombia","startTime":1707191621893,"refId":"[1.1:30]","endTime":1707191622739,"exampleData":{"latitude":"4","longitude":"-72"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":238900,"millis":0.2389,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":149600,"millis":0.1496,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":458100,"millis":0.4581,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":963600,"millis":0.9636,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1086800,"millis":1.0868,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":615399,"millis":0.615399,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":359464700,"millis":359.4647,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:42.750 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-72&formatted=true&lat=%C3%B1&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:43.107 response time in milliseconds: 356\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:42 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":17901,"millis":0.017901,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":994200,"millis":0.9942,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":38,"description":"","durationMillis":363.9892,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191622744,"refId":"[2.1:38]","endTime":1707191623110,"exampleData":{"latitude":"Ã±","longitude":"-72"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":485699,"millis":0.485699,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":317301,"millis":0.317301,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":1733200,"millis":1.7332,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1636700,"millis":1.6367,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":885501,"millis":0.885501,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":705800,"millis":0.7058,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":369405600,"millis":369.4056,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:43.124 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=a&formatted=true&lat=8&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:43.491 response time in milliseconds: 367\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:42 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":19900,"millis":0.0199,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":982999,"millis":0.982999,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":39,"description":"","durationMillis":376.1727,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191623115,"refId":"[2.2:39]","endTime":1707191623494,"exampleData":{"latitude":"8","longitude":"a"},"exampleIndex":1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":541400,"millis":0.5414,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":355801,"millis":0.355801,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":540600,"millis":0.5406,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":5847801,"millis":5.847801,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1217300,"millis":1.2173,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1160100,"millis":1.1601,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":363723701,"millis":363.723701,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:43.515 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-5&formatted=true&lat=.&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:43.874 response time in milliseconds: 358\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:42 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":30300,"millis":0.0303,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":1117400,"millis":1.1174,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":40,"description":"","durationMillis":374.534403,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191623502,"refId":"[2.3:40]","endTime":1707191623878,"exampleData":{"latitude":".","longitude":"-5"},"exampleIndex":2},{"sectionIndex":1,"stepResults":[{"result":{"nanos":169400,"millis":0.1694,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":105301,"millis":0.105301,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":445399,"millis":0.445399,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":941099,"millis":0.941099,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":959000,"millis":0.959,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":938100,"millis":0.9381,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":369152900,"millis":369.1529,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:43.890 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=ass&formatted=true&lat=%25%24%23&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:44.257 response time in milliseconds: 366\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:43 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":10100,"millis":0.0101,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":393300,"millis":0.3933,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":41,"description":"","durationMillis":373.114599,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191623884,"refId":"[2.4:41]","endTime":1707191624258,"exampleData":{"latitude":"%$#","longitude":"ass"},"exampleIndex":3},{"sectionIndex":1,"stepResults":[{"result":{"nanos":263801,"millis":0.263801,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":337800,"millis":0.3378,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":1031800,"millis":1.0318,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":4049900,"millis":4.0499,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":1433100,"millis":1.4331,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":854600,"millis":0.8546,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":363864400,"millis":363.8644,"status":"passed"},"step":{"line":33,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:44.281 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-a72f&formatted=true&lat=8&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:44.643 response time in milliseconds: 361\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:43 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 69\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"error parsing parameter\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":8300,"millis":0.0083,"status":"passed"},"step":{"line":34,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":212700,"millis":0.2127,"status":"passed"},"step":{"line":35,"prefix":"And","index":2,"text":"match $ == responseFailedParameter"}}],"line":42,"description":"","durationMillis":372.056401,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid parameters","startTime":1707191624270,"refId":"[2.5:42]","endTime":1707191624644,"exampleData":{"latitude":"8","longitude":"-a72f"},"exampleIndex":4},{"sectionIndex":2,"stepResults":[{"result":{"nanos":218499,"millis":0.218499,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":120600,"millis":0.1206,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":292100,"millis":0.2921,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":917000,"millis":0.917,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":875800,"millis":0.8758,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":504600,"millis":0.5046,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":357290499,"millis":357.290499,"status":"passed"},"step":{"line":45,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:44.654 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=70&formatted=true&lat=90&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:45.008 response time in milliseconds: 354\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:44 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 87\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"no timezone information found for lat\/lng\",\n  \"value\": 15\n}}\n\n"},{"result":{"nanos":17999,"millis":0.017999,"status":"passed"},"step":{"line":46,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":1017599,"millis":1.017599,"status":"passed"},"step":{"line":47,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"no timezone information found for lat\/lng\", \"value\": 15 }}"}}],"line":51,"description":"","durationMillis":361.254696,"failed":false,"executorName":"main","name":"Get geographical data of a country that does not have info","startTime":1707191624648,"refId":"[3.1:51]","endTime":1707191625011,"exampleData":{"latitude":"90","longitude":"70"},"exampleIndex":0},{"sectionIndex":2,"stepResults":[{"result":{"nanos":360300,"millis":0.3603,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":108300,"millis":0.1083,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":526300,"millis":0.5263,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":3263199,"millis":3.263199,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":846001,"millis":0.846001,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1090001,"millis":1.090001,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":379753500,"millis":379.7535,"status":"passed"},"step":{"line":45,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:45.025 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=99&formatted=true&lat=90&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:45.401 response time in milliseconds: 376\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:44 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 87\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"no timezone information found for lat\/lng\",\n  \"value\": 15\n}}\n\n"},{"result":{"nanos":16600,"millis":0.0166,"status":"passed"},"step":{"line":46,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":498799,"millis":0.498799,"status":"passed"},"step":{"line":47,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"no timezone information found for lat\/lng\", \"value\": 15 }}"}}],"line":52,"description":"","durationMillis":386.463,"failed":false,"executorName":"main","name":"Get geographical data of a country that does not have info","startTime":1707191625016,"refId":"[3.2:52]","endTime":1707191625404,"exampleData":{"latitude":"90","longitude":"99"},"exampleIndex":1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":994399,"millis":0.994399,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":139000,"millis":0.139,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":400900,"millis":0.4009,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":957999,"millis":0.957999,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":829700,"millis":0.8297,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1096500,"millis":1.0965,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":350533701,"millis":350.533701,"status":"passed"},"step":{"line":55,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:45.416 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=901&formatted=true&lat=81&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:45.764 response time in milliseconds: 347\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:44 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 61\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"invalid lat\/lng\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":20600,"millis":0.0206,"status":"passed"},"step":{"line":56,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":510499,"millis":0.510499,"status":"passed"},"step":{"line":57,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"invalid lat\/lng\", \"value\": 14 }}"}}],"line":61,"description":"","durationMillis":355.483298,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid latitude and longitude","startTime":1707191625408,"refId":"[4.1:61]","endTime":1707191625766,"exampleData":{"latitude":"81","longitude":"901"},"exampleIndex":0},{"sectionIndex":3,"stepResults":[{"result":{"nanos":241101,"millis":0.241101,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":223600,"millis":0.2236,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"path geoPath = '\/timezoneJSON'"}},{"result":{"nanos":455601,"millis":0.455601,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"params { username: #(user.name), formatted: true, lat: #(latitude), lng: #(longitude) }"}},{"result":{"nanos":1398300,"millis":1.3983,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":973700,"millis":0.9737,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":4,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":1049299,"millis":1.049299,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":5,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":372721900,"millis":372.7219,"status":"passed"},"step":{"line":55,"prefix":"When","index":0,"text":"method get"},"stepLog":"22:53:45.777 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=801&formatted=true&lat=700&username=Batman\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:53:46.145 response time in milliseconds: 367\n1 < 200\n1 < Date: Tue, 06 Feb 2024 03:53:45 GMT\n1 < Server: Apache\/2.4.37 (AlmaLinux) mod_jk\/1.2.49 OpenSSL\/1.1.1k\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Content-Length: 61\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Content-Type: application\/json;charset=UTF-8\n{\"status\": {\n  \"message\": \"invalid lat\/lng\",\n  \"value\": 14\n}}\n\n"},{"result":{"nanos":7899,"millis":0.007899,"status":"passed"},"step":{"line":56,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":290800,"millis":0.2908,"status":"passed"},"step":{"line":57,"prefix":"And","index":2,"text":"match $ == {\"status\": { \"message\": \"invalid lat\/lng\", \"value\": 14 }}"}}],"line":62,"description":"","durationMillis":377.3622,"failed":false,"executorName":"main","name":"Get geographical data of a country with invalid latitude and longitude","startTime":1707191625769,"refId":"[4.2:62]","endTime":1707191626148,"exampleData":{"latitude":"700","longitude":"801"},"exampleIndex":1}],"callDepth":0,"name":"Get geographical data of a country","description":"","resultDate":"2024-02-05 10:53:46 p.Â m.","durationMillis":4017.962399,"passedCount":9}